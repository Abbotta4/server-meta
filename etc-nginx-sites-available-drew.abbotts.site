server {
	# SSL configuration from https://cipherli.st
	ssl_protocols TLSv1.3 TLSv1.2;# Requires nginx >= 1.13.0 else use TLSv1.2
	ssl_prefer_server_ciphers on; 
	#ssl_dhparam /etc/nginx/dhparam.pem; # openssl dhparam -out /etc/nginx/dhparam.pem 4096
	ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
	ssl_ecdh_curve secp384r1; # Requires nginx >= 1.1.0
	ssl_session_timeout  10m;
	ssl_session_cache shared:SSL:10m;
	ssl_session_tickets off; # Requires nginx >= 1.5.9
	ssl_stapling on; # Requires nginx >= 1.3.7
	ssl_stapling_verify on; # Requires nginx => 1.3.7
	resolver 10.0.0.1 valid=300s;
	resolver_timeout 5s; 
	add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";
	add_header X-Frame-Options DENY;
	add_header X-Content-Type-Options nosniff;
	add_header X-XSS-Protection "1; mode=block";

	listen 443 ssl;
	listen [::]:443 ssl;
	ssl_certificate /etc/letsencrypt/live/drew.abbotts.site/fullchain.pem; # managed by certbot
	ssl_certificate_key /etc/letsencrypt/live/drew.abbotts.site/privkey.pem; # managed by certbot
	ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

	root /srv/http/drew.abbotts.site;
	server_name drew.abbotts.site;

	error_log /etc/nginx/info.log warn;

	location / { try_files $uri @personal; }

	location @personal {
		include uwsgi_params;
		uwsgi_pass unix:/run/uwsgi/das.sock;
	}
}

server {
	listen 80;
	listen [::]:80;
	listen 443;
	listen [::]:443;

	server_name ~^(?!drew\.)[^.]+\.abbotts\.site$ abbotts.site;
	return 301 $scheme://drew.abbotts.site$request_uri;
}